pipeline {
    agent any

    environment  {
        clusterName = 'threetier-eks'
    }

    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Download IAM Policy') {
            agent { label 'AWS-KOPS' }
            steps {
                script {
                    sh 'curl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.5.4/docs/install/iam_policy.json'
                }
            }
        }

        stage('Create IAM Policy') {
            agent { label 'AWS-KOPS' }
            steps {
                script {
                    sh """
                    aws iam create-policy \
                        --policy-name AWSLoadBalancerControllerIAMPolicy \
                        --policy-document file://iam_policy.json
                    """
                }
            }
        }

        stage('Create Service Account') {
            agent { label 'AWS-KOPS' }
            steps {
                script {
                    sh """
                    eksctl create iamserviceaccount \
                        --cluster=$clusterName \
                        --namespace=kube-system \
                        --name=aws-load-balancer-controller \
                        --role-name AmazonEKSLoadBalancerControllerRole \
                        --attach-policy-arn=arn:aws:iam::694136327666:policy/AWSLoadBalancerControllerIAMPolicy \
                        --approve
                    """
                }
            }
        }

        stage('Deploy AWS Load Balancer Controller') {
            agent { label 'AWS-KOPS' }
            steps {
                script {
                    sh """
                    helm repo add eks https://aws.github.io/eks-charts
                    helm repo update eks
                    helm install aws-load-balancer-controller eks/aws-load-balancer-controller \
                        -n kube-system \
                        --set clusterName=$clusterName \
                        --set serviceAccount.create=false \
                        --set serviceAccount.name=aws-load-balancer-controller 
                    """
                }
            }
        }
    }
}