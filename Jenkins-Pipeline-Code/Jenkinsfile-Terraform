pipeline {
    agent any

    tools {
        gcloud 'gcloud'
    }

    environment {
        CLOUDSDK_CORE_PROJECT = 'three-tier-multicloud'
    }

    stages {
        stage('Checkout Source Code') {
            steps {
                checkout scm
            }
        }

        stage('Install Google Cloud SDK') {
            steps {
                sh '''
                    curl https://sdk.cloud.google.com | bash
                '''
            }
        }
        
        stage('Initialize Google Cloud SDK') {
            steps {
                sh '''
                    gcloud init -q
                '''
            }
        }

        stage('Authenticate with GCP') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'gcp-service-account-key', variable: 'GOOGLE_APPLICATION_CREDENTIALS')]) {
                        sh '''
                            gcloud version
                            gcloud auth activate-service-account --key-file="$GOOGLE_APPLICATION_CREDENTIALS"
                            gcloud compute zones list
                        '''
                    }
                }   
            }
        }

        stage('Setup Terraform') {
            steps {
                script {
                    sh 'curl -O https://releases.hashicorp.com/terraform/1.7.4/terraform_1.7.4_linux_amd64.zip'
                    sh 'unzip terraform_1.7.4_linux_amd64.zip'
                    sh 'sudo mv terraform /usr/local/bin/'
                }
            }
        }

        stage('Initialize Terraform') {
            steps {
                script {
                    sh 'terraform init -backend-config=${AWS_BUCKET_TF_STATE}'
                    sh 'terraform init -backend-config=${AZURE_BUCKET_TF_STATE}'
                    sh 'terraform init -backend-config=${GCP_BUCKET_TF_STATE}'
                }
            }
        }

        stage('Terraform Format') {
            steps {
                script {
                    sh 'terraform fmt -check'
                }
            }
        }

        stage('Terraform Validate') {
            steps {
                script {
                    sh 'terraform validate'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                script {
                    sh 'terraform plan -no-color -input=false -out planfile'
                }
            }
        }
    }
}