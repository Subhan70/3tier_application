pipeline {
    agent any

    tools {
        terraform "terraform"
    }

    stages {
        stage('Checkout Source Code') {
            steps {
                checkout scm
            }
        }

        stage('Initialize Terraform') {
            steps {
                dir('./terraform') {
                    withAWS(credentials: 'aws-access-key-id', region: 'us-east-1') {
                        sh 'terraform init'
                    }
                }
            }
        }

        stage('Terraform Format') {
            steps {
                dir('./terraform') {
                    withAWS(credentials: 'aws-access-key-id', region: 'us-east-1') {
                        sh 'terraform fmt -check'
                    }
                }
            }
        }

        stage('Terraform Validate') {
            steps {
                dir('./terraform') {
                    withAWS(credentials: 'aws-access-key-id', region: 'us-east-1') {
                        sh 'terraform validate'
                    }
                }
            }
        }

        stage('Azure login') {
            steps {
                withCredentials([azureServicePrincipal('azure-credential')]) {
                    sh 'curl -sL https://aka.ms/InstallAzureCli | bash -s -- -y'
                    sh 'az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET -t $AZURE_TENANT_ID'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                dir('./terraform') {
                    withAWS(credentials: 'aws-access-key-id', region: 'us-east-1') {
                        sh 'terraform plan -no-color -input=false -out planfile'
                    }
                }
            }
        }
    }
}