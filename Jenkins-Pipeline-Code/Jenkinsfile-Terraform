pipeline {
    agent any

    environment {
        GOOGLE_PROJECT_ID = 'three-tier-multicloud'
        GOOGLE_APPLICATION_CREDENTIALS = credentials('gcp-service-account-key') // Credential ID for GCP service account key
        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id')
        AWS_BUCKET_TF_STATE = credentials('aws-bucket-tf-state')
        AZURE_BUCKET_TF_STATE = credentials('azure-bucket-tf-state')
        GCP_BUCKET_TF_STATE = credentials('gcp-tf-state')
    }

    stages {
        stage('Checkout Source Code') {
            steps {
                checkout scm
            }
        }

        stage('Authenticate with GCP') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'gcp-service-account-key', variable: 'GOOGLE_APPLICATION_CREDENTIALS')]) {
                        sh "gcloud auth activate-service-account --key-file=${GOOGLE_APPLICATION_CREDENTIALS}"
                    }
                }
            }
        }

        stage('Setup Terraform') {
            steps {
                script {
                    sh 'curl -O https://releases.hashicorp.com/terraform/1.7.4/terraform_1.7.4_linux_amd64.zip'
                    sh 'unzip terraform_1.7.4_linux_amd64.zip'
                    sh 'sudo mv terraform /usr/local/bin/'
                }
            }
        }

        stage('Initialize Terraform') {
            steps {
                script {
                    sh 'terraform init -backend-config=${AWS_BUCKET_TF_STATE}'
                    sh 'terraform init -backend-config=${AZURE_BUCKET_TF_STATE}'
                    sh 'terraform init -backend-config=${GCP_BUCKET_TF_STATE}'
                }
            }
        }

        stage('Terraform Format') {
            steps {
                script {
                    sh 'terraform fmt -check'
                }
            }
        }

        stage('Terraform Validate') {
            steps {
                script {
                    sh 'terraform validate'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                script {
                    sh 'terraform plan -no-color -input=false -out planfile'
                }
            }
        }
    }
}